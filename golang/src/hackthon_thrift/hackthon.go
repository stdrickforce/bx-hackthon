// This file is automatically generated. Do not modify.

package hackthon_thrift

import (
	"fmt"
)

var _ = fmt.Sprintf

type Hackthon interface {
	Ping() error
	Restore(imageBytes []byte) ([]byte, error)
}

type HackthonServer struct {
	Implementation Hackthon
}

func (s *HackthonServer) Ping(req *HackthonPingRequest, res *HackthonPingResponse) error {
	err := s.Implementation.Ping()
	return err
}

func (s *HackthonServer) Restore(req *HackthonRestoreRequest, res *HackthonRestoreResponse) error {
	val, err := s.Implementation.Restore(req.ImageBytes)
	res.Value = val
	return err
}

type HackthonPingRequest struct {
}

type HackthonPingResponse struct {
}

type HackthonRestoreRequest struct {
	ImageBytes []byte `thrift:"1,required" json:"image_bytes"`
}

type HackthonRestoreResponse struct {
	Value []byte `thrift:"0" json:"value,omitempty"`
}

type HackthonClient struct {
	Client RPCClient
}

func (s *HackthonClient) Ping() (err error) {
	req := &HackthonPingRequest{}
	res := &HackthonPingResponse{}
	err = s.Client.Call("ping", req, res)
	return
}

func (s *HackthonClient) Restore(imageBytes []byte) (ret []byte, err error) {
	req := &HackthonRestoreRequest{
		ImageBytes: imageBytes,
	}
	res := &HackthonRestoreResponse{}
	err = s.Client.Call("restore", req, res)
	if err == nil {
		ret = res.Value
	}
	return
}
